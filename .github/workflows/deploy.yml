name: Deploy AksharJobs to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: |
          cd frontend
          rm -rf node_modules
          npm ci --prefer-offline=false --no-audit --no-fund
      
      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          CI: false
      
      - name: Upload frontend build to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "frontend/build/*"
          target: "/tmp/aksharjobs-build/"
          strip_components: 2
      
      - name: Deploy to EC2 and restart services
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "🔄 Starting deployment..."
            
            # Navigate to project directory
            cd /var/www/AksharJobs
            
            # Pull latest code
            echo "📥 Pulling latest code from GitHub..."
            git pull origin main
            
            # Create backup of current frontend build
            echo "💾 Creating backup..."
            sudo cp -r /var/www/AksharJobs/frontend/build /var/www/AksharJobs/frontend/build_backup_$(date +%Y%m%d_%H%M%S) 2>/dev/null || true
            
            # Move new build to frontend directory
            echo "📦 Deploying new frontend build..."
            sudo rm -rf /var/www/AksharJobs/frontend/build/*
            sudo cp -r /tmp/aksharjobs-build/* /var/www/AksharJobs/frontend/build/
            sudo rm -rf /tmp/aksharjobs-build
            
            # Update backend dependencies
            echo "📚 Updating backend dependencies..."
            cd /var/www/AksharJobs/backend
            source venv/bin/activate
            pip install -r requirements.txt --quiet
            
            # Restart backend with PM2
            echo "🔄 Restarting backend services..."
            pm2 restart all
            
            # Set proper permissions
            echo "🔐 Setting permissions..."
            sudo chown -R www-data:www-data /var/www/AksharJobs/frontend/build
            sudo chmod -R 755 /var/www/AksharJobs/frontend/build
            
            # Reload Nginx
            echo "🌐 Reloading Nginx..."
            sudo systemctl reload nginx
            
            # Cleanup old backups (keep last 5)
            echo "🧹 Cleaning up old backups..."
            cd /var/www/AksharJobs/frontend
            ls -t | grep build_backup | tail -n +6 | xargs -r rm -rf
            
            echo "✅ Deployment completed successfully!"
            echo "📊 PM2 Status:"
            pm2 status
      
      - name: Verify deployment
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "🔍 Verifying deployment..."
            
            # Check if build directory exists and has files
            if [ -d "/var/www/AksharJobs/frontend/build" ] && [ "$(ls -A /var/www/AksharJobs/frontend/build)" ]; then
              echo "✅ Frontend build directory exists and is not empty"
            else
              echo "❌ Frontend build directory is missing or empty"
              exit 1
            fi
            
            # Check PM2 processes
            if pm2 list | grep -q "online"; then
              echo "✅ Backend services are running"
            else
              echo "❌ Backend services are not running"
              exit 1
            fi
            
            # Check Nginx status
            if sudo systemctl is-active --quiet nginx; then
              echo "✅ Nginx is running"
            else
              echo "❌ Nginx is not running"
              exit 1
            fi
            
            echo "🎉 All checks passed! Deployment verified successfully."
